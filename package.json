{
  "name": "@vrbo/root",
  "private": true,
  "description": "Vrbo tech dev test monorepo",
  "license": "MIT",
  "author": "Giampiero Bono <giampiero.bono@hotmail.it>",
  "scripts": {
    "build:api-poller": "lerna run build --scope @vrbo/api-poller",
    "build:api-poller:prod": "cross-env ENV=production lerna run build --scope @vrbo/api-poller",
    "build:api-poller:watch": "lerna run build:watch --scope @vrbo/api-poller",
    "build:common-components": "lerna run build --scope @vrbo/common-components",
    "build:common-components:prod": "cross-env ENV=production lerna run build --scope @vrbo/common-components",
    "build:common-components:watch": "lerna run build:watch --scope @vrbo/common-components",
    "build:data-models": "lerna run build --scope @vrbo/data-models",
    "build:data-models:prod": "cross-env ENV=production lerna run build --scope @vrbo/data-models",
    "build:data-models:watch": "lerna run build:watch --scope @vrbo/data-models",
    "build:local:deps": "npm run build:styling && npm run build:data-models && npm run build:api-poller && npm run build:store && npm run build:common-components",
    "build:local:deps:prod": "npm run build:styling && npm run build:data-models:prod && npm run build:api-poller:prod && npm run build:store:prod && npm run build:common-components:prod",
    "build:property-leaderboard": "lerna run build --scope @vrbo/property-leaderboard",
    "build:store": "lerna run build --scope @vrbo/store",
    "build:store:prod": "cross-env ENV=production lerna run build --scope @vrbo/store",
    "build:store:watch": "lerna run build:watch --scope @vrbo/store",
    "build:styling": "lerna run build --scope @vrbo/styling",
    "clean:all": "npm run clean:dist:all && npm run clean:node_modules:all",
    "clean:dist:all": "lerna run clean:dist --parallel",
    "clean:dist:api-poller": "lerna run clean:dist --scope @vrbo/api-poller",
    "clean:dist:common-components": "lerna run clean:dist --scope @vrbo/common-components",
    "clean:dist:data-models": "lerna run clean:dist --scope @vrbo/data-models",
    "clean:dist:store": "lerna run clean:dist --scope @vrbo/store",
    "clean:node_modules:all": "npm run concurrently \"rimraf node_modules\" \"lerna clean --yes\"",
    "clean:node_modules:api-poller": "lerna clean --yes --scope @vrbo/api-poller",
    "clean:node_modules:common-components": "lerna clean --yes --scope @vrbo/common-components",
    "clean:node_modules:data-models": "lerna clean --yes --scope @vrbo/data-models",
    "clean:node_modules:property-leaderboard": "lerna clean --yes --scope @vrbo/property-leaderboard",
    "clean:node_modules:root": "rimraf node_modules",
    "clean:node_modules:store": "lerna clean --yes --scope @vrbo/store",
    "concurrently": "concurrently --kill-others-on-fail",
    "deps:versions:harmonize": "gulp versions-harmonize",
    "preinstall": "node ./scripts/check-npm.js",
    "postinstall": "lerna bootstrap && npm run build:local:deps:prod",
    "lint:all": "lerna run lint --parallel && lerna run lint:style --parallel",
    "lint:all:fix": "lerna run lint --parallel -- -- --fix && lerna run lint:style --parallel -- -- --fix",
    "lint:api-poller": "lerna run lint --scope @vrbo/api-poller",
    "lint:api-poller:fix": "lerna run lint --scope @vrbo/api-poller -- -- --fix",
    "lint:common-component": "lerna run lint --scope @vrbo/common-components",
    "lint:common-component:fix": "lerna run lint --scope @vrbo/common-components -- -- --fix",
    "lint:data-models": "lerna run lint --scope @vrbo/data-models",
    "lint:data-models:fix": "lerna run lint --scope @vrbo/data-models -- -- --fix",
    "lint:property-leaderboard:fix": "lerna run lint --scope @vrbo/property-leaderboard",
    "lint:store": "lerna run lint --scope @vrbo/store",
    "lint:store:fix": "lerna run lint --scope @vrbo/store -- -- --fix",
    "lint:style:all": "lerna run lint:style --parallel",
    "serve:property-leaderboard": "npm run build:property-leaderboard && serve packages/property-leaderboard/build",
    "sort-package-json:all": "npm run concurrently \"npm run sort-package-json:root\" \"lerna run sort-package-json --parallel\"",
    "sort-package-json:api-poller": "lerna run sort-package-json --scope @vrbo/api-poller",
    "sort-package-json:common-components": "lerna run sort-package-json --scope @vrbo/common-components",
    "sort-package-json:data-models": "lerna run sort-package-json --scope @vrbo/data-models",
    "sort-package-json:leaderboard": "lerna run sort-package-json --scope @vrbo/property-leaderboard",
    "sort-package-json:root": "sort-package-json package.json",
    "start:property-leaderboard": "lerna run start --scope @vrbo/property-leaderboard",
    "test:all": "lerna run test --parallel",
    "test:all:ci": "lerna run test --parallel -- -- --coverage",
    "test:all:snapshots": "lerna run test --parallel -- -- -u",
    "test:api-poller": "lerna run test --scope @vrbo/api-poller",
    "test:api-poller:ci": "lerna run test --scope @vrbo/api-poller -- -- --coverage",
    "test:api-poller:snapshots": "lerna run test --scope @vrbo/api-poller -- -- -u",
    "test:store": "lerna run test --scope @vrbo/store",
    "test:store:ci": "lerna run test --scope @vrbo/store -- -- --coverage",
    "test:store:snapshots": "lerna run test --scope @vrbo/store -- -- -u"
  },
  "husky": {
    "hooks": {
      "prepare-commit-msg": "lint-staged && exec < /dev/tty && git cz --hook || true",
      "pre-push": "npm run test:all:ci"
    }
  },
  "lint-staged": {
    "*.html": [
      "prettier --write",
      "git add"
    ],
    "*.js": [
      "prettier --write",
      "git add"
    ],
    "*.json": [
      "prettier --write",
      "git add"
    ],
    "*.scss": [
      "stylelint --fix",
      "git add"
    ],
    "*.ts": [
      "tslint --fix --config ./tslint.json",
      "prettier --write",
      "git add"
    ],
    "*.tsx": [
      "tslint --fix --config ./tslint.json",
      "prettier --write",
      "git add"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "devDependencies": {
    "@types/enzyme-adapter-react-16": "^1.0.5",
    "@types/jest": "^24.0.25",
    "@types/jsdom": "^12.2.4",
    "@types/mocha": "^5.2.7",
    "autoprefixer": "^9.7.3",
    "commitizen": "^4.0.3",
    "concurrently": "^5.0.2",
    "cross-env": "^6.0.3",
    "css-loader": "^3.4.0",
    "cz-conventional-changelog": "^3.0.2",
    "enzyme": "^3.11.0",
    "enzyme-adapter-react-16": "^1.15.2",
    "enzyme-to-json": "^3.4.3",
    "glob": "^7.1.6",
    "gulp": "^4.0.2",
    "gulp-json-editor": "^2.5.4",
    "husky": "^3.1.0",
    "jest": "^24.9.0",
    "lerna": "^3.15.0",
    "lint-staged": "^9.5.0",
    "node-sass": "^4.13.0",
    "postcss-loader": "^3.0.0",
    "prettier": "^1.19.1",
    "redux": "^4.0.5",
    "rimraf": "^3.0.0",
    "rxjs-marbles": "^5.0.4",
    "sass-loader": "^8.0.0",
    "serve": "^11.3.0",
    "sort-package-json": "^1.31.0",
    "style-loader": "^1.1.2",
    "stylelint": "^12.0.1",
    "stylelint-config-recommended": "^3.0.0",
    "ts-jest": "^24.2.0",
    "ts-loader": "^6.2.1",
    "tslib": "1.9.3",
    "tslint": "^5.20.1",
    "typescript": "^3.4.1",
    "webpack": "4.41.2",
    "webpack-build-notifier": "^2.0.0",
    "webpack-cli": "^3.3.10"
  },
  "engines": {
    "node": ">10.0.0"
  }
}
